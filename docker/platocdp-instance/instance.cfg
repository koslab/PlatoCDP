[env]
recipe = collective.recipe.environment
PLATOCDP_DB_NAME = platocdp
PLATOCDP_DB_USER = platocdp
PLATOCDP_DB_PASS = platocdp
PLATOCDP_DB_HOST = postgres.local
PLATOCDP_DB_ASYNC = platocdp_async
PLATOCDP_ZODB_CACHESIZE = 5000
PLATOCDP_ZSERVER_THREADS = 4
PLATOCDP_MUNIN_SECRET = 11260d2baf951a93bdd91876333db369
PLATOCDP_TIMEZONE = Asia/Kuala_Lumpur
PLATOCDP_ASYNC_INSTANCETYPE = instance
PLATOCDP_EGGS = 

[config]
timezone = Asia/Kuala_Lumpur
eggs = 
    platocdp.policy
    ${env:PLATOCDP_EGGS}

default-username = admin
default-password = admin
munin-secret = ${env:PLATOCDP_MUNIN_SECRET}
zodb-cache-size= ${env:PLATOCDP_ZODB_CACHESIZE}
zserver-threads = ${env:PLATOCDP_ZSERVER_THREADS}

dbname = ${env:PLATOCDP_DB_NAME}
dbuser = ${env:PLATOCDP_DB_USER}
dbhost = ${env:PLATOCDP_DB_HOST}
dbpass = ${env:PLATOCDP_DB_PASS}
dbasync = ${env:PLATOCDP_DB_ASYNC}

asynctype = ${env:PLATOCDP_ASYNC_INSTANCETYPE}

[buildout]
parts = 
    env
    instance
    instance-munin
    omelette
extends = buildout.cfg releaseversions.cfg

allow-hosts = 
    *.python.org

find-links += 
    ${buildout:directory}/egg_repo

auto-checkout = 
sources = nosources

[instance]
recipe = plone.recipe.zope2instance
http-address = 0.0.0.0:8080
eggs = 
    Plone
    Pillow
    plone.app.dexterity [grok]
    plone.app.async
    RelStorage
    psycopg2
    ${config:eggs}

zodb-cache-size = ${config:zodb-cache-size}
user = ${config:default-username}:${config:default-password}
zserver-threads = ${config:zserver-threads}
effective-user = plone
event-log = ${buildout:log-directory}/${:_buildout_section_name_}.log
z2-log = ${buildout:log-directory}/${:_buildout_section_name_}-Z2.log

environment-vars =
    PYTHON_EGG_CACHE ${buildout:pyeggcache-directory}
    HOME ${buildout:directory}/var/
    TMPDIR ${buildout:directory}/var/tmp/
    zope_i18n_compile_mo_files true
    ZC_ASYNC_UUID ${buildout:directory}/var/${:_buildout_section_name_}-uuid.txt
    TZ ${config:timezone}

zcml-additional =
    <configure xmlns="http://namespaces.zope.org/zope">
        <include package="plone.app.async" file="multi_db_${config:asynctype}.zcml" />
    </configure>

rel-storage = 
    type postgresql
    blob-dir ${buildout:directory}/var/blobcache
    shared-blob-dir false
    dsn dbname='${config:dbname}' user='${config:dbuser}' host='${config:dbhost}' password='${config:dbpass}'

zope-conf-additional =
    <product-config munin.zope>
        secret ${config:munin-secret}
    </product-config>

    <zodb_db async>
        cache-size ${instance:zodb-cache-size}
        <relstorage>
            blob-dir ${buildout:directory}/var/blobcache
            shared-blob-dir false

            <postgresql>
                dsn dbname='${config:dbasync}' user='${config:dbuser}' host='${config:dbhost}' password='${config:dbpass}'
            </postgresql>
        </relstorage>
        mount-point /zasync
    </zodb_db>

[instance-munin]
recipe = zc.recipe.egg
eggs = munin.zope
scripts = munin=${:_buildout_section_name_}
arguments = ip_address='127.0.0.1',
http_address='8080',  secret='${config:munin-secret}'

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

